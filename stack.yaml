AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "My API Gateway and Lambda function"

Resources:
  lambdaIAMRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - "*"
                Effect: "Allow"
                Resource:
                  - "*"
          PolicyName: "lambdaCan"    

  producerQueue:
    Type: "AWS::SQS::Queue"
    Properties:
      ContentBasedDeduplication: false
      DelaySeconds: 0
      FifoQueue: false
      QueueName: "producerQueue"

  producerFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      Description: "Producer Function"
      FunctionName: "producerFunction"
      Handler: "functions/producer.handler"
      MemorySize: 128
      Role: !GetAtt "lambdaIAMRole.Arn"
      Runtime: "python3.7"
      Timeout: 10
      CodeUri: .
      Environment:
        Variables:
          QUEUE_URL: !GetAtt "producerQueue.Arn"

  consumerFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      Description: "Consumer Function"
      FunctionName: "consumerFunction"
      Handler: "functions/consumer.handler"
      MemorySize: 128
      Role: !GetAtt "lambdaIAMRole.Arn"
      Runtime: "python3.7"
      Timeout: 10
      CodeUri: .
      Environment:
        Variables:
          SNS_TOPIC: "arn:aws:sns:us-east-1:820315430153:TestTopic"

  producerTrigger:
    Type: "AWS::Lambda::EventSourceMapping"
    Properties:
      BatchSize: 10
      Enabled: true
      EventSourceArn: !GetAtt "producerQueue.Arn"
      FunctionName: !GetAtt "consumerFunction.Arn"
    DependsOn: 
      - "producerQueue"
      - "consumerFunction"

